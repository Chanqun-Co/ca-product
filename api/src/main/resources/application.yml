spring:
  main:
    allow-bean-definition-overriding: true
  kafka:
    consumer:
      enable-auto-commit: true
      bootstrap-servers: localhost:10000
      group-id: himanshu_consumer_group
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer


    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  application:
    name: ca-product
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${db.url:jdbc:mysql://localhost:3306/carsharing_product_dev}
    username: ${db.username:root}
    password: ${db.password:1234}
    hikari:
      maximum-pool-size: 2
      minimum-idle: 1
  jpa:
    hibernate:
      ddl-auto: ${db.ddl:create}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
      jakarta:
        persistence:
          validation:
            mode: none
    show-sql: false

server:
  port: 0

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
